{
	"tekheader": {
		"prefix": "tekh",
		"body": [
			"/*",
      "** EPITECH PROJECT, ${CURRENT_YEAR}",
      "** ${1:$TM_FILENAME}",
      "** File description:",
      "** ${2:$TM_FILENAME_BASE}",
      "*/",
      "",
      "$0"
		],
    "description": "EPITECH header"
	},
  "for": {
    "prefix": "for",
    "body": [
      "for (${1:int} ${2:i} = ${3:0}; $2 < ${4:length}; ++$2) {",
      "    $0",
      "}"
    ],
    "description": "Code snippet for 'for' loop"
  },
  "do": {
    "prefix": "do",
    "body": [
      "do {",
      "    $0",
      "} while($1) {",
      "    ",
      "}"
    ],
    "description": "Code snippet for 'do...while' loop"
  },
  "while": {
    "prefix": "while",
    "body": [
      "while ($1)",
      "{",
      "    $0",
      "}"
    ],
    "description": "Code snippet for 'while' loop"
  },
  "if": {
    "prefix": "if",
    "body": [
      "if ($1) {",
      "    $0",
      "}"
    ],
    "description": "Code snippet for 'if' statement"
  },
  "else": {
    "prefix": "else",
    "body": [
      "else {",
      "    $0",
      "}"
    ],
    "description": "Code snippet for 'else' statement"
  },
  "else if": {
    "prefix": "elif",
    "body": [
      "else if ($1) {",
      "    $0",
      "}"
    ],
    "description": "Code snippet for 'else-if' statement"
  },
  "enum": {
    "prefix": "enum",
    "body": [
      "enum ${1:MyEnum} {",
      "    $0",
      "};"
    ],
    "description": "Code snippet for 'enum'"
  },
  "class_function": {
    "prefix": "cfun",
    "body": [
      "/*",
      " * ${3:description}",
      " *",
      " * ${4:return value}",
      " */",
      "${1:void} ${2:function}() noexcept;"
    ],
    "description": "Code snippet for 'class function'"
  },
  "class_function1": {
    "prefix": "cfun1",
    "body": [
      "/*",
      " * ${5:description}",
      " *",
      " * ${6:return value}",
      " *",
      " * ${7:argument} -> ${8:description}",
      " */",
      "${1:void} ${2:function}(${3:int} ${4:var}) noexcept;"
    ],
    "description": "Code snippet for 'class function 1'"
  },
  "class_function2": {
    "prefix": "cfun2",
    "body": [
      "/*",
      " * ${7:description}",
      " *",
      " * ${8:return value}",
      " *",
      " * ${9:argument1} -> ${10:description}",
      " *",
      " * ${11:argument2} -> ${12:description}",
      " */",
      "${1:void} ${2:function}(${3:int} ${4:var1}, ${5:int} ${6:var2}) noexcept;"
    ],
    "description": "Code snippet for 'class function 2'"
  },
  "pragma": {
    "prefix": "pragma",
    "body": [
      "#pragma once",
      "",
      "$0"
    ],
    "description": "Code snippet for 'pragma once'"
  },
  "struct": {
    "prefix": "struct",
    "body": [
      "struct ${1:MyStruct}",
      "{",
      "    $0",
      "};"
    ],
    "description": "Code snippet for 'struct'"
  },
  "switch": {
    "prefix": "switch",
    "body": [
      "switch (${1:expression}) {",
      "case ${2:x}:",
      "    $3",
      "    break;",
      "default:",
      "    $0",
      "    break;",
      "}"
    ],
    "description": "Code snippet for 'switch' statement"
  },
  "case": {
    "prefix": "case",
    "body": [
      "case ${1:x}:",
      "    $0",
      "    break;"
    ],
    "description": "Code snippet for 'case' in switch statement"
  },
  "#inc": {
    "prefix": "inc",
    "body": [
      "#include \"$1.hpp\""
    ],
    "description": "Code snippet for '#include \" \"'"
  },
  "#Inc": {
    "prefix": "Inc",
    "body": [
      "#include <$1>"
    ],
    "description": "Code snippet for '#include < >'"
  },
  "Main function template": {
    "prefix": "main",
    "body": [
      "int main (const int argc, const char *argv[])",
      "{",
      "    $1",
      "    return 0;",
      "}"
    ],
    "description": "A standard main function for a C++ program"
  }
}
